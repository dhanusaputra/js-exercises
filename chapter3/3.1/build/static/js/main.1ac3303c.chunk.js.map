{"version":3,"sources":["components/Filter.js","components/Person.js","components/PersonForm.js","services/person.js","App.js","index.js"],"names":["Filter","props","onChange","handle","Person","person","name","number","value","id","text","handleClick","Button","onClick","Persons","persons","map","key","handleRemove","PersonForm","onSubmit","handleSubmit","handleName","handleNumber","type","baseURL","axios","get","then","response","data","newObject","post","put","delete","Notification","message","className","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setFilter","notifMessage","setNotifMessage","useEffect","personService","initialPerson","personsToShow","length","toLowerCase","includes","event","target","preventDefault","personObject","indexOf","window","confirm","changedPerson","find","n","returnedPerson","catch","error","concat","console","log","setTimeout","deletedPerson","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ac3303c.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) => {\n  return (\n    <div>\n      filter shown with: <input onChange={props.handle}/>\n    </div>\n  )\n}\n\nexport default Filter\n","import React from 'react'\n\nconst Persons = (props) => {\n  return (\n    <div>\n    {props.persons.map(person =>\n      <Person key={person.name} person={person} handleClick={props.handleRemove}/>\n    )}\n    </div>\n  )\n}\n\nconst Person = (props) => {\n  return (\n    <div>\n      {props.person.name} {props.person.number} <Button value={props.person.id} text=\"delete\" handleClick={props.handleClick} />\n    </div>\n  )\n}\n\nconst Button = (props) => {\n  return (\n    <button value={props.value} onClick={props.handleClick}>{props.text}</button>\n  )\n}\n\nexport default Persons\n","import React from 'react'\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        name: <input value={props.name} onChange={props.handleName} />\n      </div>\n      <div>\n        number: <input value={props.number} onChange={props.handleNumber} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm\n","import axios from 'axios'\nconst baseURL = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseURL)\n  return request.then(response => response.data)\n}\n\nconst get = id => {\n  const request = axios.get(`${baseURL}/?id=${id}`)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseURL, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseURL}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = id => {\n  const request = axios.delete(`${baseURL}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default {getAll, get, create, update, remove}\n","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter.js'\nimport Persons from './components/Person.js'\nimport PersonForm from './components/PersonForm.js'\nimport personService from './services/person.js'\nimport './index.css'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ notifMessage, setNotifMessage ] = useState(['info', null])\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPerson =>{\n        setPersons(initialPerson)\n      })\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    }\n    if (persons.map(person => person.name.toLowerCase()).indexOf(newName.toLowerCase()) !== -1) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with the new one?`)) {\n        const changedPerson = persons.find(n => n.name.toLowerCase() === newName.toLowerCase())\n        personService\n          .update(changedPerson.id, personObject).then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== changedPerson.id ? person : returnedPerson))\n            setNotifMessage(['info',`Updated ${personObject.name}`])\n          }).catch(error => {\n            setNotifMessage(['error', `Information of ${personObject.name} has already been removed from server`])\n            setPersons(persons.filter(n => n.id !== changedPerson.id))\n          })\n      }\n    } else {\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNotifMessage(['info',`Added ${personObject.name}`])\n        })\n        .catch(error => {\n          console.log(error.response.data)\n          setNotifMessage(['error', `${error.response.data.error}`])\n        })\n    }\n    setNewName('')\n    setNewNumber('')\n    setTimeout(() => {\n      setNotifMessage(['info', null])\n    }, 5000)\n  }\n\n  const removePerson = (event) => {\n    const deletedPerson = persons.find(person => person.id === event.target.value)\n    if (window.confirm(`Delete ${deletedPerson.name} ?`)) {\n      personService\n        .remove(deletedPerson.id)\n        .then( () => {\n          setPersons(persons.filter(person => person.id !== deletedPerson.id))\n        })\n    }\n  }\n\n  const personsToShow = filter.length === 0\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notifMessage} />\n      <Filter handle={handleFilterChange} />\n      <h3>Add a new</h3>\n      <PersonForm handleSubmit={addPerson} name={newName} number={newNumber} handleName={handleNameChange} handleNumber={handleNumberChange} />\n      <h3>Numbers</h3>\n      <Persons persons={personsToShow} handleRemove={removePerson}/>\n    </div>\n  )\n}\n\nconst Notification = ({ message }) => {\n  if (message[1] === null) {\n    return null\n  }\n\n  return (\n    <div className={message[0]}>\n      {message[1]}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}